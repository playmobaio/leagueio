apiVersion: "agones.dev/v1"
kind: Fleet
# Fleet Metadata
# https://v1-15.docs.kubernetes.io/docs/reference/generated/kubernetes-api/v1.15/#objectmeta-v1-meta
metadata:
  name: play-moba-fleet
  labels:
    app: game-server
spec:
  selector:
    matchLabels:
      app: game-server
  # the number of GameServers to keep Ready or Allocated in this Fleet
  replicas: 3
  # defines how GameServers are organised across the cluster.
  # Options include:
  # "Packed" (default) is aimed at dynamic Kubernetes clusters, such as cloud providers, wherein we want to bin pack
  # resources
  # "Distributed" is aimed at static Kubernetes clusters, wherein we want to distribute resources across the entire
  # cluster
  scheduling: Packed
  # a GameServer template - see:
  # https://agones.dev/site/docs/reference/gameserver/ for all the options
  strategy:
    # The replacement strategy for when the GameServer template is changed. Default option is "RollingUpdate",
    # "RollingUpdate" will increment by maxSurge value on each iteration, while decrementing by maxUnavailable on each
    # iteration, until all GameServers have been switched from one version to another.
    # "Recreate" terminates all non-allocated GameServers, and starts up a new set with the new details to replace them.
    type: RollingUpdate
    # Only relevant when `type: RollingUpdate`
    rollingUpdate:
      # the amount to increment the new GameServers by. Defaults to 25%
      maxSurge: 25%
      # the amount to decrements GameServers by. Defaults to 25%
      maxUnavailable: 25%
  template:
    # GameServer metadata
    metadata:
      generateName: play-moba-
      labels:
        app: game-server
    # GameServer specification
    spec:
      ports:
        - name: default
          portPolicy: Dynamic
          protocol: TCP
          containerPort: 3000
      # sessionAffinity:
      #   affinityType: "CLIENT_IP"
      timeoutSec: 300
      connectionDraining:
        drainingTimeoutSec: 600
      health:
        # waits for 30 seconds before checking health
        initialDelaySeconds: 30
        # health ping sends every 20 seconds, so let's give it 5 seconds buffer
        periodSeconds: 25
      template:
        spec:
          serviceAccountName: default
          containers:
          - name: play-moba
            image: playmoba.azurecr.io/game-server:latest
            imagePullPolicy: Always
          imagePullSecrets:
            - name: acr-secret
            # args: ["--timeout=0"] # Change the timeout here, if you like the nodejs server to run longer.